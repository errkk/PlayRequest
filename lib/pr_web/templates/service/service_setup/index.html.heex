<div class="container container--middle">
  <div class="col--main">
    <h2>Setup</h2>
    <ol class="setup-list">
      <li>
        <h3>
          <%= check @has_token_sonos and @has_token_spotify %>
          Authenticate accounts
        </h3>
        <%= unless @has_token_sonos and @has_token_spotify do %>
        <p>
          <%= unless @has_token_sonos, do: link "Authorise Sonos",
              to: @sonos_auth_link,
              class: "button" %>
          <%= unless @has_token_spotify, do: link "Authorise Spotify",
              to: @spotify_auth_link,
              class: "button" %>
        </p>
        <% end %>
      </li>
      <li>
        <h3>
          <%= check @has_households %>
          Set Sonos household
        </h3>
        <%= unless @has_households do %>
          <p>
            <%= link "Save households",
                to: Routes.service_setup_path(@conn, :save_households),
                method: :post,
                class: "button" %>
          </p>
        <% end %>

        <%= unless @has_active_households do %>
          <div class="box">
            <h3>Households</h3>
            <%= for item <- @households do %>
              <%= link if(item.is_active, do: "🙋‍♂️", else: "🙅‍♀️"),
                  to: Routes.service_setup_path(@conn, :toggle_household, item),
                  method: :put %>
              <%= unless is_nil(item.label), do: item.label, else: item.household_id %>
            <% end %>
            <p>
              All sonos stuff done via this household id
            </p>
          </div>
        <% end %>
      </li>
      <li>
        <h3>
          <%= check @has_active_groups %>
          Set Sonos speaker group
        </h3>

        <%= if @has_active_households and not @has_active_groups do %>
          <p>
            <%= unless @has_groups, do: link "Save groups",
                to: Routes.service_setup_path(@conn, :save_groups),
                method: :post,
                class: "button" %>
          </p>

          <%= unless @has_active_groups do %>
            <div class="box">
              <h3>Groups</h3>
              <p>
                Pick a group that this thing will play to.
                Make sure to create a group that has the speakers you want in it.
              </p>
              <%= for item <- @groups do %>
                <%= link if(item.is_active, do: "🙋‍♂️", else: "🙅‍♀️"),
                    to: Routes.service_setup_path(@conn, :toggle_group, item),
                    method: :put %>
                <%= item.name %>
              <% end %>
            </div>
          <% end %>
        <% end %>
        <%= if @has_active_households and @has_groups do %>
          <p>
            <%= link "Clear groups",
                to: Routes.service_setup_path(@conn, :clear_groups),
                method: :delete,
                class: "button" %>
          </p>
        <% end %>
      </li>
      <li>
        <h3>
          <%= check @active_group_subscribed %>
          Setup webhook
        </h3>
        <%= if @has_groups and @has_active_groups and not @active_group_subscribed do %>
          <p>
          <%= link "Subscribe webooks",
              to: Routes.service_setup_path(@conn, :subscribe_sonos_webhooks),
              method: :post,
              class: "button" %>
          </p>
          <p>
            Subscribe to Sonos metadata and playback events
          </p>
        <% end %>
      </li>
      <li>
        <h3>
          <%= check @spotify_playlist_created %>
          Create PlayRequest playlist
        </h3>
        <%= unless @spotify_playlist_created do %>
          <p>
            <%= link "Create playlist on Spotify",
                to: Routes.service_setup_path(@conn, :create_spotify_playlist),
                method: :post,
                class: "button" %>
          </p>
          <p>
            Makes a playlist on Spotify called PlayRequest
          </p>
        <% end %>
      </li>
      <li>
        <h3>
          <%= check() %>
          Fav the playlist on Sonos
        </h3>
        <p>
          You have to do that in the (Sonos) app
        </p>
      </li>
    </ol>

    <h2>Actions</h2>
    <ol class="setup-list">
      <li>
        <h3>Trigger playlist</h3>

        <%= link "Trigger playlist on Sonos",
            to: Routes.service_setup_path(@conn, :trigger_playlist),
            method: :post,
            class: "button" %>
        <p>
          Trigger the playlist to play on Sonos, it's kept as a favorite and triggering that will make it play.
        </p>
        <%= link "Bump",
            to: Routes.service_setup_path(@conn, :bump),
            method: :post,
            class: "button" %>
        <p>
          Skip to next track, press trigger again to make the next thing play if there is something to play.
        </p>
      </li>
      <li>
        <h3>Sync queue</h3>

        <%= link "Sync queue to Spotify playlist",
            to: Routes.service_setup_path(@conn, :sync_playlist),
            method: :post,
            class: "button" %>
        <p>
          Sync queue to Spotify playlist, this happens automatically when tracks are added or played.
        </p>
      </li>
      <li>
        <h3>Get State</h3>

        <%= link "Get state",
            to: Routes.service_setup_path(@conn, :get_state),
            method: :post,
            class: "button" %>
        <p>
          Webhook should do this, but this will fetch the state
        </p>
      </li>
    </ol>
  </div>
</div>
